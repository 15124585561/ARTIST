/*
 * Copyright 2016 Lukas Dresel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.model.application'

def lib_distribution_root = '../distribution'
model {
    repositories {
        libs(PrebuiltLibraries) {
            Utility {
                // Inform Android Studio where the header file dir for this lib is
                headers.srcDir "${lib_distribution_root}/include/"

                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/lib/utility/${targetPlatform.getName()}/libUtility.so")
                }
            }
            Hooking {
                // Inform Android Studio where the header file dir for this lib is
                headers.srcDir "${lib_distribution_root}/include/"

                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/lib/hooking/${targetPlatform.getName()}/libHooking.so")
                }
            }
            AndroidRuntime {
                // Inform Android Studio where the header file dir for this lib is
                headers.srcDir "${lib_distribution_root}/include/"

                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/lib/art/${targetPlatform.getName()}/libAndroidRuntime.so")
                }
            }
            HostSystem {
                // Inform Android Studio where the header file dir for this lib is
                headers.srcDir "${lib_distribution_root}/libHostSystem/include/"

                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file("${lib_distribution_root}/lib/hostsystem/${targetPlatform.getName()}/libHostSystem.so")
                }
            }
        }
    }
    android {
        compileSdkVersion = 24
        buildToolsVersion = "24.0.1"

        defaultConfig {
            applicationId = "com.example.lukas.ndktest"
            minSdkVersion.apiLevel = 21
            targetSdkVersion.apiLevel = 24
            versionCode = 1
            versionName = "1.0"
        }
        ndk {
            moduleName = 'artist'
            toolchain = 'clang'
            CFlags.addAll(["-Wno-pointer-to-int-cast", "-Wno-int-to-pointer-cast"])
            ldLibs.addAll(["log", "dl", 'android'])
            cppFlags.add("-fpermissive")
        }
        sources {
            main {
                jni {
                    dependencies {
                        // if it were *.a, change shared --> static
                        library 'AndroidRuntime' linkage 'shared'
                        library 'Utility' linkage 'shared'
                        library 'HostSystem' linkage 'shared'
                        library 'Hooking' linkage 'shared'
                    }
                }
                jniLibs {
                    // for shared lib, lib need to be pushed to the target too
                    // Once libs are copied into app/src/main/jniLibs directory,
                    // Android Studio will pack them into APK's lib/ directory
                    // Here we like to avoid another duplication by pointing
                    // to the files that containing our libs' distribution location
                    // so the same file is used by compiler at host, also packed
                    // into APk to be used at Target (phone/tablet)
                    source {
                        srcDirs = [ "${lib_distribution_root}/lib/art",
                                    "${lib_distribution_root}/lib/utility",
                                    "${lib_distribution_root}/lib/hostsystem",
                                    "${lib_distribution_root}/lib/hooking" ]
                    }
                }
            }
        }
        buildTypes {
            debug {
                ndk.with {
                    debuggable = true
                }
            }
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-rules.pro'))
            }
        }
        productFlavors {
            create("armeabi") {
                ndk.with {
                    abiFilters.add("armeabi")
                }
            }
            create("armeabi-v7a") {
                ndk.with {
                    abiFilters.add("armeabi-v7a")
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    println rootProject.getName()
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.google.guava:guava:18.0'
}


tasks.whenTaskAdded { task ->
    if (task.name.contains('compile')) {
        task.dependsOn ':libAndroidRuntime:distributeLib'
        task.dependsOn ':libHooking:distributeLib'
        task.dependsOn ':libHostSystem:distributeLib'
        task.dependsOn ':libUtility:distributeLib'
    }
}
